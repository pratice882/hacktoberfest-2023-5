Geek is organising a bike race with N bikers. The initial speed of the ith biker is denoted by Hi Km/hr and the acceleration of ith biker as Ai Km/Hr2. A biker whose speed is 'L' or more, is considered be a fast biker. The total speed on the track for every hour is calculated by adding the speed of each fast biker in that hour. When the total speed on the track is 'M' kilometers per hour or more, the safety alarm turns on. 
Find the minimum number of hours after which the safety alarm will start.


Example 1:

Input: 
N = 3, M = 400, L = 120
H = {20, 50, 20}
A = {20, 70, 90}
Output: 3
Explaination: 
Speeds of all the Bikers at ith hour
Biker1= [20  40  60  80 100] 
Biker2= [50 120 190 260 330]
Biker3= [20 110 200 290 380] 

Initial Speed on track  = 0 
because none of the biker's speed is fast enough.
Speed on track after 1st Hour= 120
Speed on track after 2nd Hour= 190+200=390
Speed on track after 3rd Hour= 260+290=550
Alarm will start at 3rd Hour.



def minimumHoursToAlarm(N, M, L, H, A):
    time = 0
    speed = [0] * N

    while True:
        alarm_speed = 0

        for i in range(N):
            speed[i] += A[i]
            if speed[i] >= L:
                alarm_speed += speed[i]

        if alarm_speed >= M:
            return time

        time += 1

# Example
N = 3
M = 400
L = 120
H = [20, 50, 20]
A = [20, 70, 90]

result = minimumHoursToAlarm(N, M, L, H, A)
print(result)
